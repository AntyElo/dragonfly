#!/bin/python3
#Use to shell scripts: `interpol "$SEQ" $(PAIRS[@])`
#Pair: input%20seq=output%20seq
#Or (on -p): input "seq=output seq"
import argparse as ap, time
from os.path import expanduser as os_expuser
pobj = ap.ArgumentParser("[dfp do_]interpol[ate]")
pobj.add_argument('-p', '--no_cto', '--no_procent', action='store_false', default=True)
pobj.add_argument('seq', metavar='sequance', type=str, help='main sequance', default="")
pobj.add_argument('rel', metavar='pair', nargs='*', type=str, help='pair of "${in}=${out}"', default="")

out = pobj.parse_args()
seq = out.seq
rel = [elm.replace("%", "%ct").replace("\\=", "%eq") for elm in out.rel]
rel = [[sub.replace("%eq", "=").replace("%ct", "%") for sub in elm.split("=")] for elm in rel]
if out.no_cto: rel = [[sub.replace("%20", " ") for sub in elm] for elm in rel]
for elm in rel:
	assert len(elm) > 1, f"is not pair, elm: {elm}"
	seq = seq.replace(elm[0], elm[1])

print(seq) #Hello shell!